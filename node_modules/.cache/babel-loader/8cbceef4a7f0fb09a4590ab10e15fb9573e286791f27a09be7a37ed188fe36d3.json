{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport axios from 'axios';\nconst fetchUsers = () => {\n  return axios.get('http://localhost:4000/Users');\n};\nconst addUsers = user => {\n  return axios.post('http://localhost:4000/Users', hero);\n};\nexport const useUserData = (onSuccess, onError) => {\n  _s();\n  return useQuery('users', fetchUsers, {\n    onSuccess,\n    onError\n  });\n};\n_s(useUserData, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useAddUsersData = () => {\n  _s2();\n  const queryClient = useQueryClient();\n  return useMutation(addUsers, {\n    onSuccess: data => {\n      queryClient.setQueryData('users', oldQueryData => {\n        return {\n          // it append the cache and use that data without hitting a new network request\n          ...oldQueryData,\n          data: [...oldQueryData.data, data.data]\n        };\n      });\n    }\n  });\n};\n_s2(useAddUsersData, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});","map":{"version":3,"names":["useMutation","useQuery","useQueryClient","axios","fetchUsers","get","addUsers","user","post","hero","useUserData","onSuccess","onError","useAddUsersData","queryClient","data","setQueryData","oldQueryData"],"sources":["C:/Users/hp/Desktop/crackTogether/my-app/src/components/Hooks/useUserData.js"],"sourcesContent":["import { useMutation, useQuery,useQueryClient } from \"react-query\";\r\nimport axios from 'axios'\r\n\r\nconst fetchUsers=()=>{\r\n    return axios.get('http://localhost:4000/Users')\r\n}\r\n\r\nconst addUsers=(user)=>{\r\n    return axios.post('http://localhost:4000/Users',hero)\r\n}\r\nexport const useUserData=(onSuccess,onError)=>{\r\n    return useQuery('users',fetchUsers,{\r\n        onSuccess,\r\n        onError,\r\n    })\r\n}\r\n\r\nexport const useAddUsersData=()=>{\r\n    const queryClient=useQueryClient()\r\n    return useMutation(addUsers,{\r\n        onSuccess:(data)=>{\r\n                    queryClient.setQueryData('users',(oldQueryData)=>{\r\n            return {   // it append the cache and use that data without hitting a new network request\r\n                ...oldQueryData,\r\n                data:[...oldQueryData.data,data.data]\r\n            }\r\n           })\r\n        }\r\n    })\r\n}"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,QAAQ,EAACC,cAAc,QAAQ,aAAa;AAClE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAC,MAAI;EACjB,OAAOD,KAAK,CAACE,GAAG,CAAC,6BAA6B,CAAC;AACnD,CAAC;AAED,MAAMC,QAAQ,GAAEC,IAAI,IAAG;EACnB,OAAOJ,KAAK,CAACK,IAAI,CAAC,6BAA6B,EAACC,IAAI,CAAC;AACzD,CAAC;AACD,OAAO,MAAMC,WAAW,GAAC,CAACC,SAAS,EAACC,OAAO,KAAG;EAAA;EAC1C,OAAOX,QAAQ,CAAC,OAAO,EAACG,UAAU,EAAC;IAC/BO,SAAS;IACTC;EACJ,CAAC,CAAC;AACN,CAAC;AAAA,GALYF,WAAW;EAAA,QACbT,QAAQ;AAAA;AAMnB,OAAO,MAAMY,eAAe,GAAC,MAAI;EAAA;EAC7B,MAAMC,WAAW,GAACZ,cAAc,EAAE;EAClC,OAAOF,WAAW,CAACM,QAAQ,EAAC;IACxBK,SAAS,EAAEI,IAAI,IAAG;MACND,WAAW,CAACE,YAAY,CAAC,OAAO,EAAEC,YAAY,IAAG;QACzD,OAAO;UAAI;UACP,GAAGA,YAAY;UACfF,IAAI,EAAC,CAAC,GAAGE,YAAY,CAACF,IAAI,EAACA,IAAI,CAACA,IAAI;QACxC,CAAC;MACF,CAAC,CAAC;IACL;EACJ,CAAC,CAAC;AACN,CAAC;AAAA,IAZYF,eAAe;EAAA,QACNX,cAAc,EACzBF,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}